
Comparison Operators
10 == 50
False
10 != 50
True
'Vanilla' == 'Vanilla'
True
x = 'Vanilla'
y = 'Chocolate'

x != y
True
10 <= 10
True
50 >= 10
True
 
Logical Operators
(70 > 50) and (50 > 10)
True
(10 > 50) or (50 > 10)
True
('Vanilla' > 'Chocolate') and (50 > 10)
True
not(50 > 10)
False
 
Membership Operators
ice_cream = 'I love Chocolate ice cream'

'love' in 'I love Chocolate ice cream'
True
scoops = [1,2,3,4,5]
wanted_scoops = 8

wanted_scoops in scoops
False

If - Elif - Else Statements
if 25 > 10:
    print('It worked!')
It worked!
if 25 > 10:
    print('It worked!')
else:
    print('It did not work...')
It worked!
if (25 < 10) or (1 < 3):
    print('It worked!')
elif 25 < 20:
    print('elif worked!')
elif 25 < 21:
    print('elif 2 worked!')
elif 25 < 40:
    print('elif 3 worked!')
elif 25 < 50:
    print('elif 4 worked!')
else:
    print('It did not work...')
It worked!
print('It worked!') if 10>30 else print('It did not work...')
It did not work...
if (25 < 10) or (1 < 3):
    print('It worked!')
    if 10 > 5:
        print('This nested if statement worked!')
elif 25 < 20:
    print('elif worked!')
elif 25 < 21:
    print('elif 2 worked!')
elif 25 < 40:
    print('elif 3 worked!')
elif 25 < 50:
    print('elif 4 worked!')
else:
    print('It did not work...')
It worked!
This nested if statement worked!


For Loops
integers = [1,2,3,4,5]
for number in integers:
    print(number)
1
2
3
4
5
for number in integers:
    print('yep!')
yep!
yep!
yep!
yep!
yep!
integers = [1,2,3,4,5]
for Jelly in integers:
    print(Jelly + Jelly)
2
4
6
8
10
ice_cream_dict = {'name': 'Alex Freberg', 'weekly intake': 5, 'favorite ice creams': ['MCC', 'Chocolate']}
for cream in ice_cream_dict.values():
    print(cream)
Alex Freberg
5
['MCC', 'Chocolate']
for key, value in ice_cream_dict.items():
    print(key, '->',value)
name -> Alex Freberg
weekly intake -> 5
favorite ice creams -> ['MCC', 'Chocolate']
Nested For Loops
flavors = ['Vanilla', 'Chocolate', 'Cookie Dough']
toppings = ['Hot Fudge', 'Oreos', 'Marshmallows']
for one in flavors:
    for two in toppings:
        print(one, 'topped with', two)
Vanilla topped with Hot Fudge
Vanilla topped with Oreos
Vanilla topped with Marshmallows
Chocolate topped with Hot Fudge
Chocolate topped with Oreos
Chocolate topped with Marshmallows
Cookie Dough topped with Hot Fudge
Cookie Dough topped with Oreos
Cookie Dough topped with Marshmallows

number = 0

while number < 5:
    print(number)
    number = number + 1
0
1
2
3
4
number = 0

while number < 5:
    print(number)
    if number == 3:
        break
    number = number + 1
0
1
2
3
number = 0

while number < 5:
    print(number)
    if number == 3:
        break
    number = number + 1
else:
    print('No long
  print('No longer < 5')
0
1
2
3
number = 0

while number < 5:
    number = number + 1
    if number == 3:
        continue 
    print(number)
else:
    print('No longer < 5')
1
2
4
5
No longer < 5
image.png


Functions
def first_func():
    print('We did it!')
first_func()
We did it!
def number_squared(number):
    print(number**2)
number_squared(5)
25
def number_squared_cust(number,power):
    print(number**power)
number_squared_cust(5,3)
125
args_tuple = (5,6,1,2,8)

def number_args(*number):
    print(number[0]*number[1])
number_args(*args_tuple)
30
def number_squared_cust(number,power):
    print(number**power)
number_squared_cust(power = 5,number = 3)
243
def number_kwarg(**number):
    print('My number is: ' + number['integer'] + 'My other number: ' + number['integer2'])
number_kwarg(integer = '2309', integer2 = '349')
My number is: 2309My other number: 349

Converting Data Types
num_int = 7

type(num_int)
int
num_str = '7'

type(num_str)
str
nun_str_conv = int(num_str)

type(nun_str_conv)
int
num_sum = num_int + nun_str_conv

print(num_sum)
14
type(num_sum)
